<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnRemove.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AAAASUVORK5CYII=
</value>
  </data>
</root>